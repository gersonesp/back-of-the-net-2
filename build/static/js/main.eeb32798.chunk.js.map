{"version":3,"sources":["img/moon.svg","img/sun.svg","img/deadline.svg","img/success.svg","img/timer.svg","img/star.svg","themes/theme.js","context/UserContext.js","context/TeamsContext.js","context/DarkModeContext.js","components/Navbar/NavItem.js","components/Navbar/Navbar.js","utils/storage.js","pages/Login.js","pages/Signup.js","context/PredictionsContext.js","utils/setButtonStyle.js","components/Matches/TeamInput.js","components/Matches/Match.js","utils/convertTime.js","components/Matches/MatchCard.js","utils/calculateTimeLeft.js","components/HeaderMessage.js","pages/Matches.js","components/Livewatch/LivewatchCardUserPredictions.js","components/Livewatch/LivewatchCardTeamHeading.js","components/Livewatch/LivewatchCard.js","pages/Livewatch.js","pages/Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","typography","fontFamily","fontSize","h1","palette","primary","main","UserContext","React","createContext","TeamsContext","DarkModeContext","NavItem","title","path","exact","to","activeStyle","opacity","borderBottom","Navbar","logout","useContext","darkMode","setDarkMode","className","onClick","body","document","getElementsByClassName","src","sun","moon","alt","store","token","localStorage","Login","setUser","useState","email","setEmail","password","setPassword","errors","setErrors","handleSubmit","event","a","preventDefault","axios","post","data","user","console","error","response","handleChange","target","name","value","onSubmit","type","onChange","Signup","setName","password2","setPassword2","PredictionsContext","setButtonStyle","buttonType","buttonDisabled","TeamInput","id","shortName","teamId","teamBase","score","setScore","predictions","setPredictions","useEffect","handleScoreChange","disabled","readOnly","Match","awayTeam","homeTeam","shortNameH","shortNameA","awayTeamId","homeTeamId","convertTime","time","dateMilliSeconds","Date","parse","fullDate","day","getUTCDay","date","getUTCDate","month","getUTCMonth","year","getUTCFullYear","MatchCard","fixtures","setButtonDisabled","setMissedDeadline","teams","AuthStr","get","headers","Authorization","currentDate","getTime","fixtureDate","kickoff_time","log","initialPredictions","map","team_a","team_h","short_name","populatePredictions","Provider","slice","indexOf","key","calculateTimeLeft","kickOffTime","difference","timeLeft","days","Math","floor","hours","minutes","seconds","HeaderMessage","missedDeadLine","firstKickOffTime","setTimeLeft","timer","setTimeout","clearTimeout","timerComponents","Object","keys","forEach","interval","push","deadline","success","length","Matches","setFixtures","setDays","gameweek","setGameweek","loading","setLoading","missedDeadline","seen","filteredDays","hasOwnProperty","getGameweekFixtures","err","submitPredictions","userId","window","scrollTo","top","left","behavior","CircularProgress","LivewatchCardUserPredictions","allUsers","allPredictions","gameMatch","prediction","team_h_score","homeTeamScore","team_a_score","awayTeamScore","finished","star","LiveWatchCardTeamHeading","LivewatchCard","gameId","allMatches","kickoffTime","setKickoffTime","setMinutes","Livewatch","setAllPredictions","setAllUsers","setAllMatches","getAllPredictions","getAllUsers","getAllMatches","Table","App","setTeams","prevUser","useRef","current","getUserData","getTeams","removeItem","defaults","common","MuiThemeProvider","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eeb32798.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moon.c8dd9f75.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.859acb1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/deadline.6d5b3521.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.1c669902.svg\";","module.exports = __webpack_public_path__ + \"static/media/timer.13b7e1f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.950a9ba7.svg\";","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\"',\n    fontSize: 12,\n    h1: {\n      // could customize the h1 variant as well\n    }\n  },\n  palette: {\n    primary: { main: \"#DF1B1B\" }\n  }\n});\n","import React from \"react\";\n\nconst UserContext = React.createContext({});\n\nexport default UserContext;\n","import React from \"react\";\n\nconst TeamsContext = React.createContext(null);\n\nexport default TeamsContext;\n","import React from \"react\";\n\nconst DarkModeContext = React.createContext({});\n\nexport default DarkModeContext;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavItem = ({ title, path }) => {\n  const style = { opacity: \"1\", borderBottom: \"3px solid #8879f2\" };\n\n  return (\n    <li>\n      <NavLink exact to={`/${path}`} activeStyle={style}>\n        {title}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default NavItem;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport DarkModeContext from \"../../context/DarkModeContext\";\n\nimport NavItem from \"./NavItem\";\nimport moon from \"../../img/moon.svg\";\nimport sun from \"../../img/sun.svg\";\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n  const { logout } = useContext(UserContext);\n  const { darkMode, setDarkMode } = useContext(DarkModeContext);\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  const toggleDarkMode = () => {\n    const body = document.getElementsByClassName(\"body\")[0];\n    setDarkMode(!darkMode);\n    !darkMode ? (body.className += \" dark\") : (body.className = \"body\");\n  };\n\n  return (\n    <div className={darkMode ? \"navbar dark\" : \"navbar\"}>\n      <div className=\"heading\">\n        <Link to=\"/\">\n          <h1>Back of The Net</h1>\n        </Link>\n\n        <div className=\"navButton\">\n          <Link to=\"/login\" onClick={handleLogout}>\n            Logout\n          </Link>\n        </div>\n      </div>\n\n      <ul>\n        <NavItem title=\"Matches\" path=\"\" />\n        <NavItem title=\"Live Watch\" path=\"livewatch\" />\n        <NavItem title=\"Table\" path=\"table\" />\n      </ul>\n\n      <div className={darkMode ? \"darkModeToggle dark\" : \"darkModeToggle\"}>\n        <button onClick={toggleDarkMode}>\n          <img src={!darkMode ? moon : sun} alt=\"dark/light mode\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","export const getToken = () => {\n  return localStorage.token || null;\n};\n\nexport const store = (token) => {\n  localStorage.token = token;\n};\n\nexport const remove = (token) => {\n  localStorage.removeItem(token);\n};\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport { store } from \"../utils/storage\";\nimport UserContext from \"../context/UserContext\";\n\nimport \"./LoginSignup.css\";\n\nconst Login = () => {\n  const { setUser } = useContext(UserContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post(\"/api/users/login\", {\n        email,\n        password,\n      });\n\n      store(data.token);\n      setUser(data.user);\n    } catch (err) {\n      console.error(err);\n      setErrors(err.response.data);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"loginForm\">\n      <div className=\"blankCard\">\n        <div className=\"headerContainer\">\n          <h5>Back of The Net</h5>\n          <h1>Welcome back</h1>\n        </div>\n        <div className=\"inputContainer\">\n          <div className=\"labelInput\">\n            <label>Email</label>\n            <input\n              className={errors.email ? \"inputError\" : null}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n\n            {errors.email ? (\n              <div className=\"authError\">{errors.email}</div>\n            ) : null}\n          </div>\n\n          <div className=\"labelInput\">\n            <label>Password</label>\n            <input\n              className={errors.password ? \"inputError\" : null}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n            {errors.password ? (\n              <div className=\"authError\">{errors.password}</div>\n            ) : null}\n          </div>\n\n          <div className=\"buttonContainer\">\n            <button type=\"submit\">Log In</button>\n          </div>\n\n          <div className=\"altForm\">\n            <pre>\n              New member? <Link to=\"/register\">Sign Up here.</Link>\n            </pre>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport { store } from \"../utils/storage\";\nimport UserContext from \"../context/UserContext\";\n\nconst Signup = () => {\n  const { setUser } = useContext(UserContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post(\"/api/users/register\", {\n        name,\n        email,\n        password,\n        password2,\n      });\n\n      store(data.token);\n      setUser(data.user);\n    } catch (err) {\n      console.error(err);\n      setErrors(err.response.data);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      case \"password2\":\n        setPassword2(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"loginForm\">\n      <div className=\"blankCard\">\n        <div className=\"headerContainer\">\n          <h5>Back of The Net</h5>\n          <h1>Create An Account</h1>\n        </div>\n        <div className=\"inputContainer\">\n          <div className=\"labelInput\">\n            <label>Username</label>\n            <input\n              className={errors.name ? \"inputError\" : null}\n              type=\"name\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n            {errors.name ? (\n              <div className=\"authError\">{errors.name}</div>\n            ) : null}\n          </div>\n\n          <div className=\"labelInput\">\n            <label>Email</label>\n            <input\n              className={errors.email ? \"inputError\" : null}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n            {errors.email ? (\n              <div className=\"authError\">{errors.email}</div>\n            ) : null}\n          </div>\n\n          <div className=\"labelInput\">\n            <label>Password</label>\n            <input\n              className={errors.password ? \"inputError\" : null}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n            {errors.password ? (\n              <div className=\"authError\">{errors.password}</div>\n            ) : null}\n          </div>\n\n          <div className=\"labelInput\">\n            <label>Confirm Password</label>\n            <input\n              className={errors.password2 ? \"inputError\" : null}\n              type=\"password\"\n              name=\"password2\"\n              value={password2}\n              onChange={handleChange}\n            />\n            {errors.password2 ? (\n              <div className=\"authError\">{errors.password2}</div>\n            ) : null}\n          </div>\n\n          <div className=\"buttonContainer\">\n            <button type=\"submit\">Signup</button>\n          </div>\n\n          <div className=\"altForm\">\n            <pre>\n              Already a member? <Link to=\"/login\">Login here.</Link>\n            </pre>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\n\nconst PredictionsContext = React.createContext({});\n\nexport default PredictionsContext;\n","export const setButtonStyle = (buttonType, darkMode, buttonDisabled) => {\n  if (darkMode && buttonDisabled) {\n    return `${buttonType} disabled dark`;\n  } else if (buttonDisabled) {\n    return `${buttonType} disabled`;\n  } else {\n    return buttonType;\n  }\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport PredictionsContext from \"../../context/PredictionsContext\";\nimport DarkModeContext from \"../../context/DarkModeContext\";\n\nimport { setButtonStyle } from \"../../utils/setButtonStyle\";\nimport \"./TeamInput.css\";\n\nconst TeamInput = ({\n  name,\n  id,\n  shortName,\n  buttonDisabled,\n  teamId,\n  teamBase,\n}) => {\n  const [score, setScore] = useState(0);\n  const { predictions, setPredictions } = useContext(PredictionsContext);\n  const { darkMode } = useContext(DarkModeContext);\n\n  useEffect(() => {\n    if (\n      predictions &&\n      predictions[`${id}-${shortName}-${teamId}-${teamBase}`]\n    ) {\n      setScore(predictions[`${id}-${shortName}-${teamId}-${teamBase}`]);\n    }\n\n    // eslint-disable-next-line\n  }, [predictions]);\n\n  const handleScoreChange = (event) => {\n    event.preventDefault();\n    const name = event.target.name;\n\n    if (name === \"minus\" && score === 0) return;\n\n    switch (name) {\n      case \"minus\":\n        setScore(score - 1);\n        setPredictions({\n          ...predictions,\n          [`${id}-${shortName}-${teamId}-${teamBase}`]: score - 1,\n        });\n        break;\n      case \"add\":\n        setScore(score + 1);\n        setPredictions({\n          ...predictions,\n          [`${id}-${shortName}-${teamId}-${teamBase}`]: score + 1,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"team\">\n      <div className=\"labelImage\">\n        <img\n          className=\"teamImage\"\n          src={`https://back-of-the-net.s3.amazonaws.com/teams/${shortName}.svg`}\n          alt={shortName}\n        />\n        <label>\n          <div className=\"teamName\">{name}</div>\n        </label>\n      </div>\n\n      <div>\n        <div>\n          <button\n            className={setButtonStyle(\"scoreButton\", darkMode, buttonDisabled)}\n            name=\"minus\"\n            onClick={handleScoreChange}\n            disabled={buttonDisabled}\n          >\n            -\n          </button>\n          <input\n            className={darkMode ? \"dark\" : \"\"}\n            readOnly={true}\n            type=\"number\"\n            value={score}\n          />\n          <button\n            className={setButtonStyle(\"scoreButton\", darkMode, buttonDisabled)}\n            name=\"add\"\n            onClick={handleScoreChange}\n            disabled={buttonDisabled}\n          >\n            +\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamInput;\n","import React, { useContext } from \"react\";\nimport DarkModeContext from \"../../context/DarkModeContext\";\n\nimport TeamInput from \"./TeamInput\";\n\nimport \"./Match.css\";\n\nconst Match = ({\n  awayTeam,\n  homeTeam,\n  id,\n  shortNameH,\n  shortNameA,\n  buttonDisabled,\n  awayTeamId,\n  homeTeamId,\n}) => {\n  const { darkMode } = useContext(DarkModeContext);\n  return (\n    <li className={darkMode ? \"matchTeamContainer dark\" : \"matchTeamContainer\"}>\n      <TeamInput\n        name={homeTeam}\n        id={id}\n        shortName={shortNameH}\n        buttonDisabled={buttonDisabled}\n        teamId={homeTeamId}\n        teamBase=\"h\"\n      />\n      <TeamInput\n        name={awayTeam}\n        id={id}\n        shortName={shortNameA}\n        buttonDisabled={buttonDisabled}\n        teamId={awayTeamId}\n        teamBase=\"a\"\n      />\n    </li>\n  );\n};\n\nexport default Match;\n","export const convertTime = (time) => {\n  const weekdays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const dateMilliSeconds = Date.parse(time);\n  const fullDate = new Date(dateMilliSeconds);\n  const day = fullDate.getUTCDay();\n  const date = fullDate.getUTCDate();\n  // The getUTCMonth() method returns the month (from 0 to 11) for the specified date, according to universal time.\n  const month = fullDate.getUTCMonth() + 1;\n  const year = fullDate.getUTCFullYear();\n\n  return `${weekdays[day]} ${month}/${date}/${year}`;\n};\n","import React, { useContext, useEffect } from \"react\";\nimport TeamsContext from \"../../context/TeamsContext\";\nimport PredictionsContext from \"../../context/PredictionsContext\";\nimport UserContext from \"../../context/UserContext\";\nimport DarkModeContext from \"../../context/DarkModeContext\";\nimport axios from \"axios\";\n\nimport Match from \"./Match\";\nimport { convertTime } from \"../../utils/convertTime\";\nimport \"./MatchCard.css\";\n\nconst MatchCard = ({\n  date,\n  fixtures,\n  setButtonDisabled,\n  buttonDisabled,\n  predictions,\n  setPredictions,\n  setMissedDeadline,\n}) => {\n  const { user } = useContext(UserContext);\n  const { teams } = useContext(TeamsContext);\n  const { darkMode } = useContext(DarkModeContext);\n\n  useEffect(() => {\n    const populatePredictions = async () => {\n      try {\n        const AuthStr = localStorage.token;\n        const { data } = await axios.get(\n          `/api/predictions/${user.id}/${fixtures[0].event}`,\n          {\n            headers: { Authorization: \"Bearer \" + AuthStr },\n          }\n        );\n\n        if (data) {\n          setPredictions(data.predictions);\n          setButtonDisabled(true);\n        } else {\n          const currentDate = new Date().getTime();\n          const fixtureDate = new Date(fixtures[0].kickoff_time).getTime();\n          if (currentDate >= fixtureDate) {\n            console.log(currentDate, fixtureDate);\n            setMissedDeadline(true);\n            setButtonDisabled(true);\n          }\n\n          let initialPredictions = {};\n\n          // eslint-disable-next-line\n          fixtures.map(({ team_a, team_h, id }) => {\n            if (teams[team_a] && teams[team_h]) {\n              initialPredictions[\n                `${id}-${teams[team_h].short_name}-${team_h}-h`\n              ] = 0;\n              initialPredictions[\n                `${id}-${teams[team_a].short_name}-${team_a}-a`\n              ] = 0;\n            }\n          });\n\n          setPredictions(initialPredictions);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    populatePredictions();\n\n    // eslint-disable-next-line\n  }, [teams]);\n\n  return (\n    <PredictionsContext.Provider value={{ predictions, setPredictions }}>\n      <ul className={darkMode ? \"matchCard dark\" : \"matchCard\"}>\n        <div className={darkMode ? \"matchCardDate dark\" : \"matchCardDate\"}>\n          {convertTime(date)}\n        </div>\n        {fixtures.map(\n          ({ kickoff_time, id, team_a, team_h }) =>\n            date === kickoff_time.slice(0, kickoff_time.indexOf(\"T\")) &&\n            teams[team_a] &&\n            teams[team_h] && (\n              <Match\n                key={id}\n                awayTeam={teams[team_a].name}\n                homeTeam={teams[team_h].name}\n                shortNameH={teams[team_h].short_name}\n                shortNameA={teams[team_a].short_name}\n                awayTeamId={team_a}\n                homeTeamId={team_h}\n                id={id}\n                buttonDisabled={buttonDisabled}\n              />\n            )\n        )}\n      </ul>\n    </PredictionsContext.Provider>\n  );\n};\n\nexport default MatchCard;\n","export const calculateTimeLeft = (kickOffTime) => {\n  const difference = +new Date(kickOffTime) - +new Date();\n  let timeLeft = {};\n\n  if (difference > 0) {\n    timeLeft = {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n      minutes: Math.floor((difference / 1000 / 60) % 60),\n      seconds: Math.floor((difference / 1000) % 60),\n    };\n  }\n\n  return timeLeft;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { calculateTimeLeft } from \"../utils/calculateTimeLeft\";\nimport deadline from \"../img/deadline.svg\";\nimport success from \"../img/success.svg\";\nimport timer from \"../img/timer.svg\";\nimport \"./HeaderMessage.css\";\n\nconst HeaderMessage = ({\n  buttonDisabled,\n  missedDeadLine,\n  darkMode,\n  firstKickOffTime,\n}) => {\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft(firstKickOffTime));\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft(firstKickOffTime));\n    }, 1000);\n    // Clear timeout if the component is unmounted\n    return () => clearTimeout(timer);\n  });\n\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <span>\n        {timeLeft[interval]} {interval}{\" \"}\n      </span>\n    );\n  });\n\n  if (buttonDisabled && missedDeadLine) {\n    return (\n      <div\n        className={\n          darkMode ? \"predictionsMessage dark\" : \"predictionsMessage error\"\n        }\n      >\n        <div className=\"predictionsMessageContent\">\n          <img src={deadline} alt=\"missed-deadline\" />\n          <div className=\"messageContent\">\n            <p>\n              You have missed the deadline for the submission of this gameweek,\n              try again next week!\n            </p>\n            <Link to=\"/livewatch\">View your friends' predictions</Link>\n          </div>\n        </div>\n      </div>\n    );\n  } else if (buttonDisabled) {\n    return (\n      <div\n        className={darkMode ? \"predictionsMessage dark\" : \"predictionsMessage\"}\n      >\n        <img src={success} alt=\"submitted\" />\n        <div className=\"predictionsMessageContent\">\n          <div className=\"messageContent\">\n            <p>You have submitted this gameweek's predictions.</p>\n\n            <Link to=\"/livewatch\">Go to Live Watch</Link>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={\n          darkMode ? \"predictionsMessage dark\" : \"predictionsMessage timer\"\n        }\n      >\n        <img src={timer} alt=\"timer\" />\n        <div className=\"predictionsMessageContent\">\n          <div className=\"messageContent\">\n            <p>\n              Please make sure to submit your predictions before the first game\n              of the week starts.\n            </p>\n\n            <div>{timerComponents.length ? timerComponents : null}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default HeaderMessage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport axios from \"axios\";\n\nimport UserContext from \"../context/UserContext\";\nimport DarkModeContext from \"../context/DarkModeContext\";\nimport MatchCard from \"../components/Matches/MatchCard\";\nimport HeaderMessage from \"../components/HeaderMessage\";\nimport { setButtonStyle } from \"../utils/setButtonStyle\";\nimport \"./Matches.css\";\n\nconst Matches = () => {\n  const { user } = useContext(UserContext);\n  const { darkMode } = useContext(DarkModeContext);\n  const [fixtures, setFixtures] = useState([]);\n  const [days, setDays] = useState([]);\n  const [gameweek, setGameweek] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [predictions, setPredictions] = useState({});\n  const [missedDeadline, setMissedDeadline] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const AuthStr = localStorage.token;\n\n    try {\n      const getGameweekFixtures = async () => {\n        const { data } = await axios.get(\"/api/fixtures/gameweek-matches\", {\n          headers: { Authorization: \"Bearer \" + AuthStr },\n        });\n        setFixtures(data);\n        setGameweek(data[0].event);\n\n        const seen = {};\n        const filteredDays = [];\n\n        // eslint-disable-next-line\n        data.map(({ kickoff_time }) => {\n          if (\n            !seen.hasOwnProperty(\n              kickoff_time.slice(0, kickoff_time.indexOf(\"T\"))\n            )\n          ) {\n            filteredDays.push(kickoff_time.slice(0, kickoff_time.indexOf(\"T\")));\n            seen[kickoff_time.slice(0, kickoff_time.indexOf(\"T\"))] = true;\n          }\n        });\n        setDays(filteredDays);\n\n        setLoading(false);\n      };\n\n      getGameweekFixtures();\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    submitPredictions();\n  };\n\n  const submitPredictions = async () => {\n    try {\n      const AuthStr = localStorage.token;\n      await axios.post(\n        \"/api/predictions\",\n        {\n          userId: user.id,\n          gameweek: fixtures[0].event,\n          predictions,\n        },\n        {\n          headers: { Authorization: \"Bearer \" + AuthStr },\n        }\n      );\n\n      setButtonDisabled(true);\n      window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className={darkMode ? \"matchesContainer dark\" : \"matchesContainer\"}>\n      {loading ? (\n        <div className=\"pageHeader\">\n          <CircularProgress className=\"loading\" />\n        </div>\n      ) : fixtures.length > 0 ? (\n        <>\n          <div className=\"pageHeader\">\n            <p\n              className={darkMode ? \"matchesGameweek dark\" : \"matchesGameweek\"}\n            >\n              Gameweek {gameweek} of 38\n            </p>\n\n            <HeaderMessage\n              buttonDisabled={buttonDisabled}\n              missedDeadLine={missedDeadline}\n              darkMode={darkMode}\n              firstKickOffTime={fixtures[0].kickoff_time}\n            />\n          </div>\n\n          <div className=\"matchesList\">\n            <form onSubmit={handleSubmit}>\n              {days.map((date) => (\n                <MatchCard\n                  key={date}\n                  date={date}\n                  fixtures={fixtures}\n                  setButtonDisabled={setButtonDisabled}\n                  buttonDisabled={buttonDisabled}\n                  predictions={predictions}\n                  setPredictions={setPredictions}\n                  setMissedDeadline={setMissedDeadline}\n                />\n              ))}\n              <button\n                type=\"submit\"\n                className={setButtonStyle(\n                  \"submitButton\",\n                  darkMode,\n                  buttonDisabled\n                )}\n                disabled={buttonDisabled}\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        </>\n      ) : (\n        <div className=\"pageHeader\">\n          <p>There are no current fixtures, check back soon!</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Matches;\n","import React, { useContext } from \"react\";\nimport DarkModeContext from \"../../context/DarkModeContext\";\n\nimport star from \"../../img/star.svg\";\nimport \"./LivewatchCardUserPredictions.css\";\n\nconst LivewatchCardUserPredictions = ({\n  allUsers,\n  allPredictions,\n  gameMatch,\n}) => {\n  const { darkMode } = useContext(DarkModeContext);\n\n  if (allPredictions.length === 0) {\n    return <div />;\n  } else {\n    return allPredictions.map((prediction) => (\n      <div key={prediction.userId} className=\"player\">\n        <div className={darkMode ? \"playerName dark\" : \"playerName\"}>\n          {/* If prediction matches live score, show star image */}\n          {gameMatch.team_h_score === prediction.homeTeamScore &&\n          gameMatch.team_a_score === prediction.awayTeamScore &&\n          gameMatch.finished ? (\n            <img src={star} alt=\"winner\" />\n          ) : null}\n\n          <div className=\"userName\">{allUsers[prediction.userId]}</div>\n        </div>\n        <div\n          className={\n            darkMode ? \"playersScorePrediction dark\" : \"playersScorePrediction\"\n          }\n        >\n          {prediction.homeTeamScore} - {prediction.awayTeamScore}\n        </div>\n        <div />\n      </div>\n    ));\n  }\n};\n\nexport default LivewatchCardUserPredictions;\n","import React from \"react\";\n\nimport \"./LivewatchCardTeamHeading.css\";\n\nconst LiveWatchCardTeamHeading = ({ gameMatch, teams }) => {\n  return (\n    <div className=\"liveGame\">\n      <div className=\"team1\">\n        {teams[gameMatch.team_h].name}\n        <img\n          className=\"teamImage\"\n          src={`https://back-of-the-net.s3.amazonaws.com/teams/${\n            teams[gameMatch.team_h].short_name\n          }.svg`}\n          alt={teams[gameMatch.team_h].name}\n        />\n      </div>\n      <div className=\"liveScore\">\n        {gameMatch.team_h_score} - {gameMatch.team_a_score}\n      </div>\n\n      <div className=\"team2\">\n        <img\n          className=\"teamImage\"\n          src={`https://back-of-the-net.s3.amazonaws.com/teams/${\n            teams[gameMatch.team_a].short_name\n          }.svg`}\n          alt={teams[gameMatch.team_a].name}\n        />\n        {teams[gameMatch.team_a].name}\n      </div>\n    </div>\n  );\n};\n\nexport default LiveWatchCardTeamHeading;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TeamsContext from \"../../context/TeamsContext\";\nimport DarkModeContext from \"../../context/DarkModeContext\";\n\nimport LivewatchCardUserPredictions from \"./LivewatchCardUserPredictions\";\nimport LivewatchCardTeamHeading from \"./LivewatchCardTeamHeading\";\n\nimport { convertTime } from \"../../utils/convertTime\";\nimport \"./LivewatchCard.css\";\n\nconst LivewatchCard = ({ gameId, allPredictions, allUsers, allMatches }) => {\n  const { teams } = useContext(TeamsContext);\n  const { darkMode } = useContext(DarkModeContext);\n  const [kickoffTime, setKickoffTime] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n\n  useEffect(() => {\n    setKickoffTime(allMatches[gameId].kickoff_time);\n    setMinutes(allMatches[gameId].minutes);\n    // eslint-disable-next-line\n  }, [teams]);\n\n  return (\n    <li className={darkMode ? \"livewatchCard dark\" : \"livewatchCard\"}>\n      <div className=\"kickoffLive\">\n        <div className={darkMode ? \"time dark\" : \"time\"}>\n          {convertTime(kickoffTime)}\n        </div>\n        <span className=\"live\">{`${minutes}'`}</span>\n      </div>\n      <LivewatchCardTeamHeading teams={teams} gameMatch={allMatches[gameId]} />\n      <LivewatchCardUserPredictions\n        allPredictions={allPredictions}\n        allUsers={allUsers}\n        gameMatch={allMatches[gameId]}\n      />\n    </li>\n  );\n};\n\nexport default LivewatchCard;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport LivewatchCard from \"../components/Livewatch/LivewatchCard\";\nimport DarkModeContext from \"../context/DarkModeContext\";\nimport \"./Livewatch.css\";\n\nconst Livewatch = () => {\n  const [allPredictions, setAllPredictions] = useState({});\n  const [allUsers, setAllUsers] = useState({});\n  const [allMatches, setAllMatches] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { darkMode } = useContext(DarkModeContext);\n\n  useEffect(() => {\n    const AuthStr = localStorage.token;\n    setLoading(true);\n    // const getGameweek = async () => {\n    //   const { data } = await axios.get(\"/api/fixtures/gameweek-matches\", {\n    //     headers: { Authorization: \"Bearer \" + AuthStr },\n    //   });\n    //   const gameweek = data[0].event;\n    //   getAllPredictions(gameweek);\n    // };\n\n    const getAllPredictions = async () => {\n      const { data } = await axios.get(`/api/predictions`, {\n        headers: { Authorization: \"Bearer \" + AuthStr },\n      });\n      setAllPredictions(data);\n      setLoading(false);\n    };\n\n    const getAllUsers = async () => {\n      const { data } = await axios.get(\"/api/users\", {\n        headers: { Authorization: \"Bearer \" + AuthStr },\n      });\n\n      setAllUsers(data);\n    };\n\n    const getAllMatches = async () => {\n      const { data } = await axios.get(\"/api/fixtures/allMatches\", {\n        headers: { Authorization: \"Bearer \" + AuthStr },\n      });\n\n      setAllMatches(data);\n      getAllPredictions();\n    };\n\n    // getGameweek();\n    getAllUsers();\n    getAllMatches();\n  }, []);\n\n  return (\n    <div\n      className={darkMode ? \"livewatchContainer dark\" : \"livewatchContainer\"}\n    >\n      {loading ? (\n        <CircularProgress />\n      ) : Object.keys(allPredictions).length > 0 ? (\n        <>\n          <h1>Live Scores</h1>\n          <ul className=\"livewatchList\">\n            {Object.keys(allPredictions).map((gameId) => (\n              <LivewatchCard\n                key={gameId}\n                gameId={gameId}\n                allPredictions={allPredictions[gameId]}\n                allUsers={allUsers}\n                allMatches={allMatches}\n              />\n            ))}\n          </ul>\n        </>\n      ) : (\n        <div className=\"pageHeader\">\n          <p>\n            No predictions yet, come back after the first game of the week\n            starts!\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Livewatch;\n","import React, { useContext } from \"react\";\n\nimport DarkModeContext from \"../context/DarkModeContext\";\n\nimport \"./Table.css\";\n\nconst Table = () => {\n  const { darkMode } = useContext(DarkModeContext);\n\n  return (\n    <div className={darkMode ? \"tableContainer dark\" : \"tableContainer\"}>\n      <div className=\"pageHeader\">\n        <h1>Table</h1>\n        <p>Coming soon!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { theme } from \"./themes/theme\";\nimport UserContext from \"./context/UserContext\";\nimport TeamsContext from \"./context/TeamsContext\";\nimport DarkModeContext from \"./context/DarkModeContext\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Matches from \"./pages/Matches\";\nimport Livewatch from \"./pages/Livewatch\";\nimport Table from \"./pages/Table\";\nimport { remove } from \"./utils/storage\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [teams, setTeams] = useState({});\n  const [darkMode, setDarkMode] = useState(false);\n\n  const prevUser = useRef();\n  useEffect(() => {\n    prevUser.current = user;\n\n    try {\n      const AuthStr = localStorage.token;\n      const getUserData = async () => {\n        const { data } = await axios.get(\"/api/users/me\", {\n          headers: { Authorization: \"Bearer \" + AuthStr },\n        });\n        setUser(data);\n      };\n\n      const getTeams = async () => {\n        const { data } = await axios.get(\"/api/teams\", {\n          headers: { Authorization: \"Bearer \" + AuthStr },\n        });\n\n        setTeams(data);\n      };\n\n      if (localStorage.token && user === prevUser.current) {\n        getUserData();\n        getTeams();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n    // eslint-disable-next-line\n  }, [prevUser.current]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        setUser,\n        logout: () => {\n          setUser(null);\n          remove(\"token\");\n          delete axios.defaults.headers.common.Authorization;\n        },\n      }}\n    >\n      <TeamsContext.Provider value={{ teams, setTeams }}>\n        <DarkModeContext.Provider value={{ darkMode, setDarkMode }}>\n          <MuiThemeProvider theme={theme}>\n            <BrowserRouter>\n              {user && (\n                <>\n                  <Navbar />\n                  <Route path=\"/livewatch\" component={Livewatch} />\n                  <Route path=\"/table\" component={Table} />\n                  <Route exact path=\"/\" component={Matches} />\n                  {/* <Route component={Matches} /> */}\n                </>\n              )}\n\n              {!user && (\n                <Switch>\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/register\" component={Signup} />\n                  <Route component={Login} />\n                </Switch>\n              )}\n            </BrowserRouter>\n          </MuiThemeProvider>\n        </DarkModeContext.Provider>\n      </TeamsContext.Provider>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}